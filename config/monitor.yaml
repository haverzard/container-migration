apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: container-monitor
  namespace: kube-system
  labels:
    k8s-app: dragon-tf-operator
spec:
  selector:
    matchLabels:
      name: container-monitor
  template:
    metadata:
      labels:
        name: container-monitor
    spec:
      # hostname: container-monitor
      # subdomain: monitoring
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      tolerations:
      # this toleration is to have the daemonset runnable on master nodes
      # remove it if your masters can't run pods
      # - key: node-role.kubernetes.io/master
      #   operator: Exists
      #   effect: NoSchedule
      containers:
      - name: container-monitor
        image: haverzard/monitor-api:go-0.0.1
        imagePullPolicy: Always
        resources:
          limits:
            memory: 200Mi
          requests:
            cpu: 100m
            memory: 200Mi
        env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          - name: SERVER_ENDPOINT
            value: http://server-endpoint.kube-system.svc.cluster.local:8769
          - name: PROGRESSING_THREESHOLD
            value: "1"
          - name: CONVERGED_THREESHOLD
            value: "-25"
          - name: TIME_WEIGHT
            value: "10"
        # volumeMounts:
        # - name: varlog
        #   mountPath: /var/log
        # - name: varlibdockercontainers
        #   mountPath: /var/lib/docker/containers
        #   readOnly: true
      terminationGracePeriodSeconds: 30
      # volumes:
      # - name: varlog
      #   hostPath:
      #     path: /var/log
      # - name: varlibdockercontainers
      #   hostPath:
      #     path: /var/lib/docker/containers
# ---
# apiVersion: v1
# kind: Service
# metadata:
#   name: monitoring
#   namespace: kube-system
#   labels:
#     k8s-app: dragon-tf-operator
# spec:
#   selector:
#     name: container-monitor
#   clusterIP: None
#   ports:
#   - name: api # Actually, no port is needed.
#     port: 8081
#     targetPort: 8081